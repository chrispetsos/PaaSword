@prefix hlo: <http://www.seerc.org/policy-validation/hlo#>.
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:<http://www.w3.org/2001/XMLSchema#> .
@prefix pac: <http://www.paasword.eu/security-policy/seerc/pac#>.
@prefix pcm: <http://www.paasword-project.eu/ontologies/casm/2016/05/20#> .

# This is an instantiation ontology which abides to HigherLevelOntologyOWL.ttl.
# It follows the OWL semantics (almost) and can be understood by an OWL reasoner.

# All ABACRule instances should be connected with exactly one instance of
# Relational via the hasControlledObject property.
# This is OWL-compliant.
pac:ABACRule rdfs:subClassOf
              [ a hlo:ExactlyPropertyConstraint ;
                hlo:onProperty pac:hasControlledObject ;
                hlo:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                hlo:onClass pcm:Relational
              ] .

# ABACPolicySet should have only one instance.
# This is not OWL-compliant. Its semantics will be understood only by our reasoner.
pac:ABACPolicySet rdfs:subClassOf
              [ a hlo:ExactlyInstancesConstraint ;
                hlo:qualifiedCardinality "1"^^xsd:nonNegativeInteger
              ] .

# Authorisation class consists of only two instances; positive and negative.
# This is OWL-compliant.
pac:Authorisation owl:equivalentClass 
			  [ a hlo:EnumeratedClassConstraint;
				hlo:oneOf (pac:positive pac:negative)
			  ] .              

pac:positive a pac:Authorisation.
pac:negative a pac:Authorisation.
	