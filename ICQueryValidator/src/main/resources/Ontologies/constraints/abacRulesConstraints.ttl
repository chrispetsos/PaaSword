@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix pac: <http://www.paasword.eu/security-policy/seerc/pac#>.
@prefix pwd: <http://www.paasword.eu/security-policy/seerc/pwd#>.
@prefix pcm: <http://www.paasword-project.eu/ontologies/casm/2015/11/30#> .
@prefix ppm: <http://www.paasword-project.eu/ontologies/psm/2015/11/30#> .
@prefix pcpm: <http://www.paasword-project.eu/ontologies/cpsm/2015/11/30#> .
@prefix pbe: <http://www.paasword.eu/security-policy/seerc/pbe#>.
@prefix pdm: <http://www.paasword-project.eu/ontologies/dsm/2015/11/30#> .
@prefix pbdfd: <http://www.paasword.eu/security-policy/seerc/pbdfd#>.
@prefix gr: <http://purl.org/goodrelations/v1#>. 

# Policies are comprised of one or more rules
pwd:Policy rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pwd:hasRule ;
                owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:Rule
              ] .

# Policies belong to exactly one PolicySet
pwd:Policy rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pwd:belongsToPolicySet ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:PolicySet
              ] .

# ABAC Policies have exactly one Policy Combining Algorithm
pac:ABACPolicy rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasPolicyCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicyCombiningAlgorithms
              ] .

# ABAC Policies Sets have exactly one Policy Set Combining Algorithm
pac:ABACPolicySet rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasPolicySetCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicySetCombiningAlgorithms
              ] .

# ABAC rules should have exactly one Controlled Object
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasControlledObject ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Object
              ] .

# ABAC rules should have exactly one Authorisation
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasAuthorisation ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:Authorisation
              ] .

# ABAC rules should have exactly one Action
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasAction ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass ppm:DataPermission
              ] .

# ABAC rules should have exactly one Actor
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasActor ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Subject
              ] .

# NOT Context expressions should have exactly one parameter
pac:NOTContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .

# AND Context expressions should have exactly two parameters
pac:ANDContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .

# OR Context expressions should have exactly two parameters
pac:ORContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .

# XOR Context expressions should have exactly two parameters
pac:XORContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .

# When the context expression hasParameter Location or
# Connectivity, it should referTo at least one Subject or Object
[ owl:intersectionOf (pac:ContextExpression
                       [ a owl:Restriction ;
                         owl:onProperty pac:hasParameter ;
                         owl:someValuesFrom [owl:unionOf (pcm:Location pcm:Connectivity)]
                       ])
] rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:refersTo ;
                owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:Subject pcm:Object)]
              ] .
