@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix pac: <http://www.paasword.eu/security-policy/seerc/pac#>.
@prefix pwd: <http://www.paasword.eu/security-policy/seerc/pwd#>.
@prefix pcm: <http://www.paasword-project.eu/ontologies/casm/2016/05/20#> .
@prefix ppm: <http://www.paasword-project.eu/ontologies/psm/2016/05/20#> .
@prefix pcpm: <http://www.paasword-project.eu/ontologies/cpsm/2016/05/20#> .
@prefix pbe: <http://www.paasword.eu/security-policy/seerc/pbe#>.
@prefix pdm: <http://www.paasword-project.eu/ontologies/dsm/2016/05/20#> .
@prefix pbdfd: <http://www.paasword.eu/security-policy/seerc/pbdfd#>.
@prefix gr: <http://purl.org/goodrelations/v1#>. 
@prefix anon: <http://www.seerc.org/ontologies/anon#>.

# Our custom annotation property for constraint level
anon:constraintLevel a owl:AnnotationProperty.

# Policies are comprised of one or more rules
pwd:Policy rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pwd:hasRule ;
                owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:Rule
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pwd:Policy ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pwd:hasRule ;
                owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:Rule
              ] ;
    rdfs:label "Policies must have at least one rule."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# Policies belong to exactly one PolicySet
pwd:Policy rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pwd:belongsToPolicySet ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:PolicySet
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pwd:Policy ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pwd:belongsToPolicySet ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:PolicySet
              ] ;
    rdfs:label "Policies must must belong to exactly one policy set."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# ABAC Policies have exactly one Policy Combining Algorithm
pac:ABACPolicy rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasPolicyCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicyCombiningAlgorithms
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACPolicy ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasPolicyCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicyCombiningAlgorithms
              ] ;
    rdfs:label "ABAC Policies must have exactly one Policy Combining Algorithm."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# ABAC Policies Sets have exactly one Policy Set Combining Algorithm
pac:ABACPolicySet rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasPolicySetCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicySetCombiningAlgorithms
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACPolicySet ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasPolicySetCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicySetCombiningAlgorithms
              ] ;
    rdfs:label "ABAC Policies Sets must have exactly one Policy Set Combining Algorithm."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# ABAC rules should have exactly one Controlled Object
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasControlledObject ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Object
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasControlledObject ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Object
              ] ;
    rdfs:label "ABAC rules must have exactly one Controlled Object."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# ABAC rules should have exactly one Authorisation
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasAuthorisation ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:Authorisation
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasAuthorisation ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:Authorisation
              ] ;
    rdfs:label "ABAC rules must have exactly one Authorisation."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# ABAC rules should have exactly one Action
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasAction ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass ppm:DataPermission
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasAction ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass ppm:DataPermission
              ] ;
    rdfs:label "ABAC rules must have exactly one Action."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# ABAC rules should have exactly one Actor
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasActor ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Subject
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasActor ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Subject
              ] ;
    rdfs:label "ABAC rules must have exactly one Actor."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# ABAC rules should not have other rules as subclasses 
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty rdfs:subClassOf ;
                owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule 
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
               owl:onProperty rdfs:subClassOf ;
               owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
               owl:onClass pac:ABACRule 
             ] ;
    rdfs:label "Subsuming rules."^^xsd:string ;
    anon:constraintLevel "warning"^^xsd:string .

# ABAC rules should be equivalent at most to themselves 
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty owl:equivalentClass ;
                owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty owl:equivalentClass ;
                owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule
              ] ;
    rdfs:label "Equivalent rules."^^xsd:string ;
    anon:constraintLevel "warning"^^xsd:string .

# ABAC rules should not contradict any other rule 
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:contradicts ;
                owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:contradicts ;
                owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule
              ] ;
    rdfs:label "Contradicting rules."^^xsd:string ;
    anon:constraintLevel "warning"^^xsd:string .

# NOT Context expressions should have exactly one parameter
pac:NOTContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:NOTContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:label "NOT Context expressions must have exactly one parameter."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# AND Context expressions should have exactly two parameters
pac:ANDContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ANDContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:label "AND Context expressions must have exactly two parameters."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# OR Context expressions should have exactly two parameters
pac:ORContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ORContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:label "OR Context expressions must have exactly two parameters."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# XOR Context expressions should have exactly two parameters
pac:XORContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:XORContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:label "XOR Context expressions must have exactly two parameters."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# Base Context expressions should have exactly one parameter
# These are the context expressions that are not NOT, AND, OR, XOR
[ owl:intersectionOf (
	pac:ContextExpression
	[owl:complementOf pac:NOTContextExpression]
	[owl:complementOf pac:ANDContextExpression]
	[owl:complementOf pac:ORContextExpression]
	[owl:complementOf pac:XORContextExpression]
	)
] 
	rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    	[ owl:intersectionOf (
								pac:ContextExpression
								[owl:complementOf pac:NOTContextExpression]
								[owl:complementOf pac:ANDContextExpression]
								[owl:complementOf pac:ORContextExpression]
								[owl:complementOf pac:XORContextExpression]
								)
							] ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:label "Base Context expressions must have exactly one parameter."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# Context expression should also referTo at most one Subject or Object
pac:ContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:refersTo ;
                owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:Subject pcm:Object)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:refersTo ;
                owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:Subject pcm:Object)]
              ] ;
    rdfs:label "Context expressions must referTo at most one Subject or Object."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

# More specifically, when the context expression hasParameter Location or
# Connectivity, it should referTo exactly one Subject or Object
[ owl:intersectionOf (pac:ContextExpression
                       [ a owl:Restriction ;
                         owl:onProperty pac:hasParameter ;
                         owl:someValuesFrom [owl:unionOf (pcm:Location pcm:Connectivity)]
                       ])
] rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:refersTo ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:Subject pcm:Object)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    	[ owl:intersectionOf (pac:ContextExpression
		                       [ a owl:Restriction ;
		                         owl:onProperty pac:hasParameter ;
		                         owl:someValuesFrom [owl:unionOf (pcm:Location pcm:Connectivity)]
		                       ])
							] ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:refersTo ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:Subject pcm:Object)]
              ] ;
    rdfs:label "Context expressions with Location or Connectivity parameters must referTo exactly one Subject or Object."^^xsd:string ;
    anon:constraintLevel "error"^^xsd:string .

### This is a portion of the Policy meta-model we present in D2.2.
### Specifically all domain/range statements have been tranferred here
### in order to ensure type-safety. Same for other ontologies below.
### It is interpreted as a set of constraints.
pwd:belongsToPolicySet a rdf:Property;
	rdfs:domain [owl:unionOf (pwd:Policy pwd:PolicySet)];
	rdfs:range pwd:PolicySet.

pwd:hasRule a rdf:Property;
	rdfs:domain pwd:Policy;
	rdfs:range pwd:Rule.

pbe:hasCryptoPolicySet a rdf:Property;
	rdfs:domain pbe:PaaSwordDataEncryption;
	rdfs:range pbe:BootstrappingCryptoPolicySet.

pbe:hasBootStrappingCryptoRule rdfs:domain pbe:BootstrappingCryptoPolicy;
	rdfs:range pbe:BootstrappingCryptoRule.

pbe:belongsToCryptoPolicySet rdfs:domain [owl:unionOf (pbe:BootstrappingCryptoPolicy pbe:BootstrappingCryptoPolicySet)];
	rdfs:range pbe:BootstrappingCryptoPolicySet.

pbe:hasControlledObject a rdf:Property;
	rdfs:domain pbe:BootstrappingCryptoRule;
	rdfs:range pcm:Object.

pbe:hasCryptoElement a rdf:Property;
	rdfs:domain pbe:BootstrappingCryptoRule;
	rdfs:range pdm:CryptographicType.

pbdfd:hasDFDPolicySet a rdf:Property;
	rdfs:domain pbdfd:PaaSwordDataFragmentationAndDistribution;
	rdfs:range pbdfd:BootstrappingDFDPolicySet.

pbdfd:hasBootstrappingDFDRule rdfs:domain pbdfd:BootstrappingDFDPolicy;
	rdfs:range pbdfd:BootstrappingDFDRule.

pbdfd:belongsToDFDPolicySet rdfs:domain [owl:unionOf (pbdfd:BootstrappingDFDPolicy pbdfd:BootstrappingDFDPolicySet)];
	rdfs:range pbdfd:BootstrappingDFDPolicySet.

pbdfd:hasControlledObject a rdf:Property;
	rdfs:domain pbdfd:BootstrappingDFDRule;
	rdfs:range pcm:Object.

pbdfd:hasDFDElement a rdf:Property;
	rdfs:domain pbdfd:BootstrappingDFDRule;
	rdfs:range pdm:DatabaseFragmentation.

pac:hasABACPolicySet a rdf:Property;
	rdfs:domain pac:PaaSwordABAC;
	rdfs:range pac:ABACPolicySet.

pac:hasControlledObject a rdf:Property;
	rdfs:domain pac:ABACRule;
	rdfs:range pcm:Object.

pac:hasAuthorisation a rdf:Property;
	rdfs:domain pac:ABACRule;
	rdfs:range pac:Authorisation.

pac:hasAction a rdf:Property;
	rdfs:domain pac:ABACRule;
	rdfs:range ppm:DataPermission.

pac:hasActor a rdf:Property;
	rdfs:domain pac:ABACRule;
	rdfs:range pcm:Subject.

pac:hasContextExpression a rdf:Property;
	rdfs:domain pac:ABACRule;
	rdfs:range pac:ContextExpression.

pac:hasABACRule rdfs:domain pac:ABACPolicy;
	rdfs:range pac:ABACRule.

pac:hasPolicyContextExpression a rdf:Property;
	rdfs:domain pac:ABACPolicy;
	rdfs:range pac:ContextExpression.

pac:hasPolicyCombiningAlgorithm a rdf:Property;
	rdfs:domain pac:ABACPolicy;
	rdfs:range pac:PolicyCombiningAlgorithms.

pac:belongsToABACPolicySet rdfs:domain [owl:unionOf (pac:ABACPolicy pac:ABACPolicySet)];
	rdfs:range pac:ABACPolicySet.
	
pac:hasPolicySetContextExpression a rdf:Property;
	rdfs:domain pac:ABACPolicySet;
	rdfs:range pac:ContextExpression.

pac:hasPolicySetCombiningAlgorithm a rdf:Property;
	rdfs:domain pac:ABACPolicySet;
	rdfs:range pac:PolicySetCombiningAlgorithms.

pac:hasPatternParameter a rdf:Property;
	rdfs:domain pac:ContextExpression;
	rdfs:range [owl:unionOf (pcpm:ContextPattern pac:ContextExpression)].

pac:hasParameter a rdf:Property;
	rdfs:domain pac:ContextExpression;
	rdfs:range [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)].

pac:hasEvaluationResult a rdf:Property;
	rdfs:domain pac:ContextExpression;
	rdfs:range xsd:boolean.

pac:refersTo a rdf:Property;
	rdfs:domain pac:ContextExpression;
	rdfs:range [owl:unionOf (pcm:Subject pcm:Object)].

























#############################################################################

#
# PaaSword Context Model (version 2016-05-20)
#
pcm:category
  a rdf:Property ;
  rdfs:domain [owl:unionOf (pcm:Service pcm:Subject)] ;
  rdfs:range pcm:category .

pcm:after
  a rdf:Property ;
  rdfs:domain pcm:DateTime ;
  rdfs:range pcm:DateTime .

pcm:hasTimezone
  a rdf:Property ;
  rdfs:domain pcm:DateTime ;
  rdfs:range xsd:string .

pcm:hasAddress
  a rdf:Property ;
  rdfs:range pcm:Address ;
  rdfs:domain pcm:POI .

pcm:hasArea
  a rdf:Property ;
  rdfs:domain pcm:AbstractLocation ;
  rdfs:range pcm:Area .

pcm:hasAreaCoordinates
  a rdf:Property ;
  rdfs:comment "This property associates an Area with specific coordinates (class)" ;
  rdfs:domain pcm:Area ;
  rdfs:range pcm:Coordinates .

pcm:hasAuthenticationMethod
  a rdf:Property ;
  rdfs:range pcm:AuthenticationMethod ;
  rdfs:domain pcm:Subject .

pcm:hasAuthorizationMethod
  a rdf:Property ;
  rdfs:range pcm:AuthorizationMethod ;
  rdfs:domain pcm:Subject .

pcm:hasBeginningDay
  a rdf:Property ;
  rdfs:range gr:DayOfWeek ;
  rdfs:domain pcm:DateTimeInterval .

pcm:hasConnectionMetric
  a rdf:Property ;
  rdfs:comment "This class refers to different ways of transmitting an access request (e.g. 3G, Cable, Satelite)" ;
  rdfs:range pcm:ConnectionMetric ;
  rdfs:domain pcm:ConnectionType .

pcm:hasEndDay
  a rdf:Property ;
  rdfs:range gr:DayOfWeek ;
  rdfs:domain pcm:DateTimeInterval .

pcm:hasIdentityType
  a rdf:Property ;
  rdfs:range pcm:IdentityType ;
  rdfs:domain pcm:Subject .

pcm:hasPointCoordinates
  a rdf:Property ;
  rdfs:range pcm:Coordinates ;
  rdfs:domain pcm:Point .

pcm:hasRole
  a rdf:Property ;
  rdfs:range <http://www.linked-usdl.org/ns/usdl-core#Role> ;
  rdfs:domain pcm:Subject .

pcm:isChildOf
  a rdf:Property ;
  rdfs:range pcm:HierarchicalDataStructure ;
  rdfs:domain pcm:HierarchicalDataStructure .

pcm:addressCountry
  a rdf:Property ;
  rdfs:domain pcm:Address .

pcm:addressLocality
  a rdf:Property ;
  rdfs:domain pcm:Address .

pcm:addressRegion
  a rdf:Property ;
  rdfs:domain pcm:Address .

pcm:before
  a rdf:Property ;
  rdfs:domain pcm:DateTime ;
  rdfs:range pcm:DateTime .

pcm:description
  a rdf:Property ;
  rdfs:domain pcm:Subject .

pcm:elevation
  a rdf:Property ;
  rdfs:domain pcm:Coordinates .

pcm:hasBeginning
  a rdf:Property ;
  rdfs:domain pcm:DateTimeInterval ;
  rdfs:range xsd:dateTime .

pcm:hasBrand
  a rdf:Property ;
  rdfs:domain pcm:Subject .

pcm:hasBuildingNumber
  a rdf:Property ;
  rdfs:domain pcm:Address ;
  rdfs:range xsd:string .

pcm:hasCircularRadius
  a rdf:Property ;
  rdfs:comment "This property declares the diameter of a circular area with a center pointed by the hasAreaCoordinates property (e.g.diameter 1km)" ;
  rdfs:domain pcm:Area ;
  rdfs:range xsd:double .

pcm:hasDUNS
  a rdf:Property ;
  rdfs:domain pcm:Subject .

pcm:hasDay
  a rdf:Property ;
  rdfs:domain pcm:Instant ;
  rdfs:range xsd:positiveInteger .

pcm:hasDomain
  a rdf:Property ;
  rdfs:domain pcm:NetworkLocation ;
  rdfs:range xsd:string .

pcm:hasDownloadRate
  a rdf:Property ;
  rdfs:domain pcm:ConnectionMetric ;
  rdfs:range xsd:nonNegativeInteger .

pcm:hasEnd
  a rdf:Property ;
  rdfs:domain pcm:DateTimeInterval ;
  rdfs:range xsd:dateTime .

pcm:hasEndpoint
  a rdf:Property ;
  rdfs:domain pcm:Service ;
  rdfs:range xsd:anyURI .

pcm:hasFileName
  a rdf:Property ;
  rdfs:domain pcm:File ;
  rdfs:range xsd:string .

pcm:hasFilePath
  a rdf:Property ;
  rdfs:domain pcm:File ;
  rdfs:range xsd:string .

pcm:hasFileType
  a rdf:Property ;
  rdfs:domain pcm:File ;
  rdfs:range xsd:string .

pcm:hasFloorNumber
  a rdf:Property ;
  rdfs:domain pcm:Address ;
  rdfs:range xsd:nonNegativeInteger .

pcm:hasHour
  a rdf:Property ;
  rdfs:domain pcm:Instant ;
  rdfs:range xsd:nonNegativeInteger .

pcm:hasIMEI
  a rdf:Property ;
  rdfs:domain pcm:Mobile ;
  rdfs:range xsd:string .

pcm:hasIMSI
  a rdf:Property ;
  rdfs:domain pcm:Mobile ;
  rdfs:range xsd:string .

pcm:hasIPAddress
  a rdf:Property ;
  rdfs:domain pcm:NetworkLocation ;
  rdfs:range xsd:string .

pcm:hasIPAddressRange
  a rdf:Property ;
  rdfs:domain pcm:NetworkLocation ;
  rdfs:range xsd:string .

pcm:hasPort
  a rdf:Property ;
  rdfs:domain pcm:NetworkLocation ;
  rdfs:range xsd:positiveInteger .

pcm:hasMetricUnit
  a rdf:Property ;
  rdfs:domain pcm:ConnectionMetric ;
  rdfs:range xsd:string .

pcm:hasMinute
  a rdf:Property ;
  rdfs:domain pcm:Instant ;
  rdfs:range xsd:nonNegativeInteger .

pcm:hasMobileOS
  a rdf:Property ;
  rdfs:domain pcm:Mobile ;
  rdfs:range xsd:string .

pcm:hasMonth
  a rdf:Property ;
  rdfs:domain pcm:Instant ;
  rdfs:range xsd:positiveInteger .

pcm:hasName
  a rdf:Property ;
  rdfs:domain [owl:unionOf (pcm:AbstractLocation pcm:Method pcm:POI)] ;
  rdfs:range xsd:string .

pcm:hasNonRelationalType
  a rdf:Property ;
  rdfs:domain pcm:NonRelational ;
  rdfs:range xsd:string .

pcm:hasRectangularRangeHeight
  a rdf:Property ;
  rdfs:comment "This property describes the height of the Rectangular area with a center pointed by the hasAreaCoordinates property(e.g. 2Km)" ;
  rdfs:domain pcm:Area ;
  rdfs:range xsd:double .

pcm:hasRectangularRangeWidth
  a rdf:Property ;
  rdfs:comment "This property describes the width of the Rectangular area with a center pointed by the hasAreaCoordinates property(e.g. 1km)" ;
  rdfs:domain pcm:Area ;
  rdfs:range xsd:double .

pcm:hasRelationalType
  a rdf:Property ;
  rdfs:domain pcm:Relational ;
  rdfs:range xsd:string .

pcm:hasRoomNumber
  a rdf:Property ;
  rdfs:domain pcm:Address ;
  rdfs:range xsd:string .

pcm:hasSecond
  a rdf:Property ;
  rdfs:domain pcm:Instant ;
  rdfs:range xsd:nonNegativeInteger .

pcm:hasSecurityProtocolImplementation
  a rdf:Property ;
  rdfs:domain pcm:SecurityProtocol ;
  rdfs:range xsd:string .

pcm:hasStationaryOS
  a rdf:Property ;
  rdfs:domain pcm:Stationary ;
  rdfs:range xsd:string .

pcm:hasSubnet
  a rdf:Property ;
  rdfs:domain pcm:NetworkLocation ;
  rdfs:range xsd:string .

pcm:hasTarget
  a rdf:Property ;
  rdfs:domain pcm:Object ;
  rdfs:range xsd:string .

pcm:hasTelecommunicationsProvider
  a rdf:Property ;
  rdfs:domain pcm:ConnectionType ;
  rdfs:range xsd:string .

pcm:hasUploadRate
  a rdf:Property ;
  rdfs:domain pcm:ConnectionMetric ;
  rdfs:range xsd:nonNegativeInteger .

pcm:hasVolumeType
  a rdf:Property ;
  rdfs:domain pcm:Volume ;
  rdfs:range xsd:string .

pcm:hasYear
  a rdf:Property ;
  rdfs:domain pcm:Instant ;
  rdfs:range xsd:positiveInteger .

pcm:hasZone
  a rdf:Property ;
  rdfs:domain pcm:NetworkLocation ;
  rdfs:range xsd:string .

pcm:isVolumeEncrypted
  a rdf:Property ;
  rdfs:domain pcm:Volume ;
  rdfs:range xsd:boolean .

pcm:latitude
  a rdf:Property ;
  rdfs:domain pcm:Coordinates .

pcm:legalName
  a rdf:Property ;
  rdfs:domain pcm:Subject .

pcm:longitude
  a rdf:Property ;
  rdfs:domain pcm:Coordinates .

pcm:name
  a rdf:Property ;
  rdfs:domain pcm:Subject .

pcm:postalCode
  a rdf:Property ;
  rdfs:domain pcm:Address .

pcm:refersToContinentalUnion
  a rdf:Property ;
  rdfs:domain pcm:Address ;
  rdfs:range xsd:string .

pcm:refersToEconomicUnion
  a rdf:Property ;
  rdfs:domain pcm:Address ;
  rdfs:range xsd:string .

pcm:streetAddress
  a rdf:Property ;
  rdfs:domain pcm:Address .

pcm:supportsEncryptedStorageMobile
  a rdf:Property ;
  rdfs:domain pcm:Mobile ;
  rdfs:range xsd:string .

pcm:supportsEncryptedStorageStationary
  a rdf:Property ;
  rdfs:domain pcm:Stationary ;
  rdfs:range xsd:string .

pcm:volumeInputSpeed
  a rdf:Property ;
  rdfs:domain pcm:Volume ;
  rdfs:range xsd:string .

pcm:volumeOutputSpeed
  a rdf:Property ;
  rdfs:domain pcm:Volume ;
  rdfs:range xsd:string .

pcm:handler
  a rdf:Property ;
  rdfs:comment "This property associates a SecurityContextElement or any of its sub-classes with a specific class handler" ;
  rdfs:domain pcm:SecurityContextElement ;
  rdfs:range pcm:ClassHandler .

pcm:packageName
  a rdf:Property ;
  rdfs:comment "This ClassHandler property specifies the fully qualified name of the Java class implementing the class handler/adapter functionality (e.g. eu.paasword.handler.LocationHandler)" ;
  rdfs:domain pcm:ClassHandler ;
  rdfs:range xsd:string .
#############################################################################

#
# PaaSword Context Pattern Model (version 2016-05-20)
#
pcpm:hasPattern
  a rdf:Property ;
  rdfs:range pcpm:ContextPattern ;
  rdfs:domain pcpm:ContextPattern .

pcpm:hasAccessedObject
  a rdf:Property ;
  rdfs:domain pcpm:AccessSequencePattern ;
  rdfs:range pcm:Object .

pcpm:hasConnectionSecurity
  a rdf:Property ;
  rdfs:range pcm:ConnectionSecurity ;
  rdfs:domain pcpm:UsualConnectionSecurity .

pcpm:hasConnectionType
  a rdf:Property ;
  rdfs:range pcm:ConnectionType ;
  rdfs:domain [owl:unionOf (pcpm:MostFrequentConnectionType pcpm:UsualConnectionType)] .

pcpm:hasDeviceType
  a rdf:Property ;
  rdfs:range pcm:DeviceType ;
  rdfs:domain [owl:unionOf (pcpm:MostFrequentDeviceType pcpm:UsualDeviceType)] .

pcpm:hasLocation
  a rdf:Property ;
  rdfs:range pcm:Location ;
  rdfs:domain pcpm:LocationPattern .

pcpm:hasPermission
  a rdf:Property ;
  rdfs:range ppm:Permission ;
  rdfs:domain pcpm:PermissionPattern .

pcpm:hasTimeWindow
  a rdf:Property ;
  rdfs:domain pcpm:ContextPattern ;
  rdfs:range pcm:DateTime .

pcpm:hasUAOThreshold
  a rdf:Property ;
  rdfs:domain pcpm:UsuallyAccessedObject ;
  rdfs:range xsd:positiveInteger .

pcpm:hasUAThreshold
  a rdf:Property ;
  rdfs:domain pcpm:UsualAccessLocation ;
  rdfs:range xsd:positiveInteger .

pcpm:hasUCSThreshold
  a rdf:Property ;
  rdfs:domain pcpm:UsualConnectionSecurity ;
  rdfs:range xsd:positiveInteger .

pcpm:hasUCTThreshold
  a rdf:Property ;
  rdfs:domain pcpm:UsualConnectionType ;
  rdfs:range xsd:positiveInteger .

pcpm:hasUDTThreshold
  a rdf:Property ;
  rdfs:domain pcpm:UsualDeviceType ;
  rdfs:range xsd:positiveInteger .

pcpm:hasUGThreshold
  a rdf:Property ;
  rdfs:domain pcpm:UsuallyGrantedPermission ;
  rdfs:range xsd:positiveInteger .

pcpm:hasUTIThreshold
  a rdf:Property ;
  rdfs:domain pcpm:UsualDateTimeInterval ;
  rdfs:range xsd:positiveInteger .

pcpm:hasUTThreshold
  a rdf:Property ;
  rdfs:domain pcpm:UsualDateTimeInstance ;
  rdfs:range xsd:positiveInteger .

pcpm:refersToObject
  a rdf:Property ;
  rdfs:domain pcpm:ContextPattern ;
  rdfs:range pcm:Object .

pcpm:refersToPermission
  a rdf:Property ;
  rdfs:domain pcpm:ContextPattern ;
  rdfs:range ppm:Permission .

pcpm:refersToSubject
  a rdf:Property ;
  rdfs:domain pcpm:ContextPattern ;
  rdfs:range pcm:Subject .
#############################################################################

#
# PaaSword Data Distribution and Encryption Model (version 2016-05-20)
#
pdm:hasAsymmetricKeySize
  a rdf:Property ;
  rdfs:domain pdm:Asymmetric ;
  rdfs:range xsd:positiveInteger .

pdm:hasCurve
  a rdf:Property ;
  rdfs:domain pdm:Asymmetric ;
  rdfs:range xsd:string .

pdm:hasFragColumn
  a rdf:Property ;
  rdfs:domain [owl:unionOf (pdm:MixedFragmentation pdm:VerticalFragmentation)] ;
  rdfs:range xsd:string .

pdm:hasFragRow
  a rdf:Property ;
  rdfs:domain [owl:unionOf (pdm:HorizontalFragmentation pdm:MixedFragmentation)] ;
  rdfs:range xsd:nonNegativeInteger .

pdm:hasPrivacyConstraint
  a rdf:Property ;
  rdfs:domain pdm:RelationalDataFragmentation ;
  rdfs:range xsd:string .

pdm:hasSymmetricBlockSize
  a rdf:Property ;
  rdfs:domain pdm:Symmetric ;
  rdfs:range xsd:positiveInteger .

pdm:hasSymmetricKeySize
  a rdf:Property ;
  rdfs:domain pdm:Symmetric ;
  rdfs:range xsd:positiveInteger .

pdm:numberOfPhysicalLocations
  a rdf:Property ;
  rdfs:domain pdm:DistributionMetric ;
  rdfs:range xsd:positiveInteger .

pdm:numberOfServers
  a rdf:Property ;
  rdfs:domain pdm:DistributionMetric ;
  rdfs:range xsd:positiveInteger .

pdm:numberOfVMs
  a rdf:Property ;
  rdfs:domain pdm:DistributionMetric ;
  rdfs:range xsd:positiveInteger .

pdm:hasModeofOperation
  a rdf:Property ;
  rdfs:domain pdm:CryptographicType ;
  rdfs:range xsd:string .
#############################################################################

#
# PaaSword Permissions Model (version 2016-05-20)
#
ppm:hasActionStatus
  a rdf:Property ;
  rdfs:domain [owl:unionOf (ppm:DDLPermission ppm:DataPermission)] ;
  rdfs:range xsd:string .

ppm:hasEndTime
  a rdf:Property ;
  rdfs:domain [owl:unionOf (ppm:DDLPermission ppm:DataPermission)] ;
  rdfs:range xsd:dateTime .

ppm:hasResult
  a rdf:Property ;
  rdfs:domain [owl:unionOf (ppm:DDLPermission ppm:DataPermission)] ;
  rdfs:range xsd:string .

ppm:hasStartTime
  a rdf:Property ;
  rdfs:domain [owl:unionOf (ppm:DDLPermission ppm:DataPermission)] ;
  rdfs:range xsd:dateTime .

ppm:hasTarget
  a rdf:Property ;
  rdfs:domain [owl:unionOf (ppm:DDLPermission ppm:DataPermission)] ;
  rdfs:range pcm:Object .
#############################################################################
