@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix pac: <http://www.paasword.eu/security-policy/seerc/pac#>.
@prefix pwd: <http://www.paasword.eu/security-policy/seerc/pwd#>.
@prefix pcm: <http://www.paasword-project.eu/ontologies/casm/2015/11/30#> .
@prefix ppm: <http://www.paasword-project.eu/ontologies/psm/2015/11/30#> .
@prefix pcpm: <http://www.paasword-project.eu/ontologies/cpsm/2015/11/30#> .
@prefix pbe: <http://www.paasword.eu/security-policy/seerc/pbe#>.
@prefix pdm: <http://www.paasword-project.eu/ontologies/dsm/2015/11/30#> .
@prefix pbdfd: <http://www.paasword.eu/security-policy/seerc/pbdfd#>.
@prefix gr: <http://purl.org/goodrelations/v1#>. 

# Policies are comprised of one or more rules
pwd:Policy rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pwd:hasRule ;
                owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:Rule
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pwd:Policy ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pwd:hasRule ;
                owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:Rule
              ] ;
    rdfs:comment "Policies must have at least one rule."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# Policies belong to exactly one PolicySet
pwd:Policy rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pwd:belongsToPolicySet ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:PolicySet
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pwd:Policy ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pwd:belongsToPolicySet ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pwd:PolicySet
              ] ;
    rdfs:comment "Policies must must belong to exactly one policy set."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# ABAC Policies have exactly one Policy Combining Algorithm
pac:ABACPolicy rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasPolicyCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicyCombiningAlgorithms
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACPolicy ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasPolicyCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicyCombiningAlgorithms
              ] ;
    rdfs:comment "ABAC Policies must have exactly one Policy Combining Algorithm."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# ABAC Policies Sets have exactly one Policy Set Combining Algorithm
pac:ABACPolicySet rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasPolicySetCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicySetCombiningAlgorithms
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACPolicySet ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasPolicySetCombiningAlgorithm ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:PolicySetCombiningAlgorithms
              ] ;
    rdfs:comment "ABAC Policies Sets must have exactly one Policy Set Combining Algorithm."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# ABAC rules should have exactly one Controlled Object
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasControlledObject ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Object
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasControlledObject ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Object
              ] ;
    rdfs:comment "ABAC rules must have exactly one Controlled Object."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# ABAC rules should have exactly one Authorisation
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasAuthorisation ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:Authorisation
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasAuthorisation ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:Authorisation
              ] ;
    rdfs:comment "ABAC rules must have exactly one Authorisation."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# ABAC rules should have exactly one Action
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasAction ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass ppm:DataPermission
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasAction ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass ppm:DataPermission
              ] ;
    rdfs:comment "ABAC rules must have exactly one Action."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# ABAC rules should have exactly one Actor
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasActor ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Subject
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasActor ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pcm:Subject
              ] ;
    rdfs:comment "ABAC rules must have exactly one Actor."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# ABAC rules should not have other rules as subclasses 
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty rdfs:subClassOf ;
                owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule 
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
               owl:onProperty rdfs:subClassOf ;
               owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
               owl:onClass pac:ABACRule 
             ] ;
    rdfs:comment "Subsuming rules."^^xsd:string ;
    rdfs:label "warning"^^xsd:string .

# ABAC rules should be equivalent at most to themselves 
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty owl:equivalentClass ;
                owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty owl:equivalentClass ;
                owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule
              ] ;
    rdfs:comment "Equivalent rules."^^xsd:string ;
    rdfs:label "warning"^^xsd:string .

# ABAC rules should not contradict any other rule 
pac:ABACRule rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:contradicts ;
                owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ABACRule ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:contradicts ;
                owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
                owl:onClass pac:ABACRule
              ] ;
    rdfs:comment "Contradicting rules."^^xsd:string ;
    rdfs:label "warning"^^xsd:string .

# NOT Context expressions should have exactly one parameter
pac:NOTContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:NOTContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:comment "NOT Context expressions must have exactly one parameter."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# AND Context expressions should have exactly two parameters
pac:ANDContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ANDContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:comment "AND Context expressions must have exactly two parameters."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# OR Context expressions should have exactly two parameters
pac:ORContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ORContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:comment "OR Context expressions must have exactly two parameters."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# XOR Context expressions should have exactly two parameters
pac:XORContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:XORContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "2"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:comment "XOR Context expressions must have exactly two parameters."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# Base Context expressions should have exactly one parameter
# These are the context expressions that are not NOT, AND, OR, XOR
[ owl:intersectionOf (
	pac:ContextExpression
	[owl:complementOf pac:NOTContextExpression]
	[owl:complementOf pac:ANDContextExpression]
	[owl:complementOf pac:ORContextExpression]
	[owl:complementOf pac:XORContextExpression]
	)
] 
	rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    	[ owl:intersectionOf (
								pac:ContextExpression
								[owl:complementOf pac:NOTContextExpression]
								[owl:complementOf pac:ANDContextExpression]
								[owl:complementOf pac:ORContextExpression]
								[owl:complementOf pac:XORContextExpression]
								)
							] ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:hasParameter ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:SecurityContextElement pac:ContextExpression)]
              ] ;
    rdfs:comment "Base Context expressions must have exactly one parameter."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# Context expression should also referTo at most one Subject or Object
pac:ContextExpression rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:refersTo ;
                owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:Subject pcm:Object pcm:Request)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:ContextExpression ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:refersTo ;
                owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:Subject pcm:Object pcm:Request)]
              ] ;
    rdfs:comment "Context expressions must referTo at most one Subject or Object."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# More specifically, when the context expression hasParameter Location or
# Connectivity, it should referTo exactly one Subject or Object
[ owl:intersectionOf (pac:ContextExpression
                       [ a owl:Restriction ;
                         owl:onProperty pac:hasParameter ;
                         owl:someValuesFrom [owl:unionOf (pcm:Location pcm:Connectivity)]
                       ])
] rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty pac:refersTo ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:Subject pcm:Object pcm:Request)]
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    	[ owl:intersectionOf (pac:ContextExpression
		                       [ a owl:Restriction ;
		                         owl:onProperty pac:hasParameter ;
		                         owl:someValuesFrom [owl:unionOf (pcm:Location pcm:Connectivity)]
		                       ])
							] ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
                owl:onProperty pac:refersTo ;
                owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onClass [owl:unionOf (pcm:Subject pcm:Object pcm:Request)]
              ] ;
    rdfs:comment "Context expressions with Location or Connectivity parameters must referTo exactly one Subject or Object."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

# ABAC policies should not have other policies as subclasses for a specific consequent
pac:AccessRequestClassFor_negative rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty rdfs:subClassOf ;
                owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
                owl:onClass pac:AccessRequestClassFor_negative 
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:AccessRequestClassFor_negative ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
               owl:onProperty rdfs:subClassOf ;
               owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
               owl:onClass pac:AccessRequestClassFor_negative 
             ] ;
    rdfs:comment "Subsuming policies for deny consequent."^^xsd:string ;
    rdfs:label "error"^^xsd:string .

pac:AccessRequestClassFor_positive rdfs:subClassOf
              [ a owl:Restriction ;
                owl:onProperty rdfs:subClassOf ;
                owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
                owl:onClass pac:AccessRequestClassFor_positive 
              ] .
[]  rdf:type       owl:Axiom ;
    owl:annotatedSource    pac:AccessRequestClassFor_positive ;
    owl:annotatedProperty  rdfs:subClassOf ;
    owl:annotatedTarget    [ a owl:Restriction ;
               owl:onProperty rdfs:subClassOf ;
               owl:qualifiedCardinality "0"^^xsd:nonNegativeInteger ;
               owl:onClass pac:AccessRequestClassFor_positive 
             ] ;
    rdfs:comment "Subsuming policies for permit consequent."^^xsd:string ;
    rdfs:label "error"^^xsd:string .